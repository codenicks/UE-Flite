#include <stdio.h>
#include <string.h>
#include "..\include\flite.h"
#include "..\include\cst_args.h"
#include "..\lang\usenglish\usenglish.h"
#include "..\lang\cmulex\cmu_lex.h"
#include "..\include\flite_version.h"
cst_voice *register_cmu_us_kal();
static cst_voice *cmu_us_no_wave = NULL;
static cst_utterance *no_wave_synth(cst_utterance *u)
{
    return u;
}
int main(int argc, char **argv)
{
//cst_voice *v;
//if (argc != 2)
//{
//fprintf(stderr,"usage: flite_test FILE\n");
//exit(-1);
//}
//flite_init();
//v = register_cmu_us_kal(NULL);
//flite_file_to_speech(argv[1],v,"play");
//flite_text_to_speech("Hello world!", v, "play");

    cst_voice *v;
	if (argc != 2)
	{
		fprintf(stderr, "usage: flite_test FILE\n");
		exit(-1);
	}
    flite_init();
    v = new_voice();
	cst_lexicon *lex;

	v->name = "no_wave_voice";

	/* Set up basic values for synthesizing with this voice */
	usenglish_init(v);
	feat_set_string(v->features, "name", "cmu_us_rms");

	/* Lexicon */
	lex = cmu_lex_init();
	feat_set(v->features, "lexicon", lexicon_val(lex));

	/* Intonation */
	feat_set_float(v->features, "int_f0_target_mean", 95.0);
	feat_set_float(v->features, "int_f0_target_stddev", 11.0);

	feat_set_float(v->features, "duration_stretch", 1.1);

	/* Post lexical rules */
	feat_set(v->features, "postlex_func", uttfunc_val(lex->postlex));

	/* Waveform synthesis: diphone_synth */
	feat_set(v->features, "wave_synth_func", uttfunc_val(&no_wave_synth));
    flite_text_to_speech("This is a test",v,"play");
    return 0;
}